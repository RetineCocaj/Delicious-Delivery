@model FoodProject.Models.FoodItem

@{
    ViewData["Title"] = "Buy";
}

<h2>Are you sure?</h2>

<div>
    <h4>Are you sure you want to add this Item to your Cart?</h4>
    <hr />
    @using (Html.BeginForm("ConfirmBuy", "Home", FormMethod.Post))
    {

        @Html.HiddenFor(model => model.FoodItemId)
        <input type="hidden" name="returnUrl" value="@(ViewBag.ReturnUrl == null ? "" : (ViewBag.ReturnUrl as string))" />
        <dl class="dl-horizontal d-flex justify-content-between flex-column" style="width:250px;">
            <div class="d-flex justify-content-between">
                <dt class="mr-5">
                    @Html.DisplayNameFor(model => model.Name)
                </dt>

                <dd class="text-right">
                    @Html.DisplayFor(model => model.Name)
                </dd>
            </div>
            <div class="d-flex justify-content-between">
                <dt class="mr-5">
                    @Html.DisplayNameFor(model => model.Price)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Price)
                </dd>
            </div>

            <div class="d-flex justify-content-between">
                <dt class="mr-5">
                    Quantity
                </dt>

                <dd class="d-flex justify-content-end">
                    <input class="text-box single-line" data-val="true"
                    data-val-number="The field Quantity must be a number." )
                    data-val-range="The field Quantity must be between 1 and 20 ." ) data-val-range-max=20
                    data-val-range-min="1" id="Quantity" name="Quantity" type="number" value="1" style="width: 60px;"/>
                </dd>
            </div>
        </dl>

        <p class="d-flex justify-content-end" style="width:20%">
            <input class="btn btn-success mr-1" type="submit" value="Confirm Buy" />
            @Html.ActionLink("Goto List", "All", null, null, new { @class = "btn btn-primary" })
        </p>
    }

</div>
